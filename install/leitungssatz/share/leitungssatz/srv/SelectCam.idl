// generated from rosidl_adapter/resource/srv.idl.em
// with input from leitungssatz/srv/SelectCam.srv
// generated code does not contain a copyright notice

#include "leitungssatz/msg/VectorResolution.idl"

module leitungssatz {
  module srv {
    struct SelectCam_Request {
      @verbatim (language="comment", text=
        "Type of camera, options are: \"IDS\", \"FLIR\", \"USB\"")
      string camera_type;

      @verbatim (language="comment", text=
        "Index of the camera if there are several of the same manufacturer connected")
      uint32 camera_index;
    };
    struct SelectCam_Response {
      @verbatim (language="comment", text=
        "All the resolutions that the camera support")
      leitungssatz::msg::VectorResolution available_resolutions;

      @verbatim (language="comment", text=
        "The index of availableResolutions that holds the current resolution of the camera (zero based indexing)")
      uint32 resolution_idx;

      @verbatim (language="comment", text=
        "indicate successful run of camera selection")
      boolean success;

      @verbatim (language="comment", text=
        "informational, e.g. for error messages")
      string message;
    };
  };
};
